"use strict";const mocha=require("mocha");let Base=mocha.reporters.Base,inherits=mocha.utils.inherits,color=Base.color,cursor=Base.cursor;const AssessmentReporter=(i,j)=>{Base.call(this,i);var k=this,l=0|.5*Base.window.width,d=i.total,e=0,m=-1;j=j||{};var a=j.reporterOptions||{};j.open=a.open||"[",j.complete=a.complete||"\u25AC",j.incomplete=a.incomplete||Base.symbols.dot,j.close=a.close||"]",j.verbose=a.verbose||!1,i.on("start",function(){console.log(),cursor.hide()}),i.on("test end",function(){e++;var b=e/d,a=0|l*b;(a!=m||j.verbose)&&(m=a,cursor.CR(),process.stdout.write("\x1B[J"),process.stdout.write(color("progress","  "+j.open)),process.stdout.write(Array(a).join(j.complete)),process.stdout.write(Array(l-a).join(j.incomplete)),process.stdout.write(color("progress",j.close)),j.verbose&&process.stdout.write(color("progress"," "+e+" of "+d)))}),i.once("end",function(){cursor.show();var c=k.stats.passes,a=k.stats.failures,b=Math.ceil(100*c/(c+a));console.log();var d=75<=b?"green":"fail",e=color("bright pass"," ")+color(d,"================ pass %d % ===================");console.log(e,b),console.log(),process.exit(0)})};inherits(AssessmentReporter,Base),module.exports=AssessmentReporter;
